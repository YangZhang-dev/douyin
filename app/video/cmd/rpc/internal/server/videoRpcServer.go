// Code generated by goctl. DO NOT EDIT.
// Source: videoRpc.proto

package server

import (
	"context"

	"douyin/app/video/cmd/rpc/internal/logic"
	"douyin/app/video/cmd/rpc/internal/svc"
	"douyin/app/video/cmd/rpc/pb"
)

type VideoRpcServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedVideoRpcServer
}

func NewVideoRpcServer(svcCtx *svc.ServiceContext) *VideoRpcServer {
	return &VideoRpcServer{
		svcCtx: svcCtx,
	}
}

// 发布视频
func (s *VideoRpcServer) UploadVideo(ctx context.Context, in *pb.UploadVideoReq) (*pb.UploadVideoResp, error) {
	l := logic.NewUploadVideoLogic(ctx, s.svcCtx)
	return l.UploadVideo(in)
}

// 视频流
func (s *VideoRpcServer) Feed(ctx context.Context, in *pb.FeedReq) (*pb.FeedResp, error) {
	l := logic.NewFeedLogic(ctx, s.svcCtx)
	return l.Feed(in)
}

// 获取点赞情况
func (s *VideoRpcServer) GetFavoriteInfo(ctx context.Context, in *pb.GetFavoriteInfoReq) (*pb.GetFavoriteInfoResp, error) {
	l := logic.NewGetFavoriteInfoLogic(ctx, s.svcCtx)
	return l.GetFavoriteInfo(in)
}

// 获取发布列表
func (s *VideoRpcServer) PublishList(ctx context.Context, in *pb.PublishListReq) (*pb.PublishListResp, error) {
	l := logic.NewPublishListLogic(ctx, s.svcCtx)
	return l.PublishList(in)
}

// 点赞
func (s *VideoRpcServer) Favorite(ctx context.Context, in *pb.FavoriteReq) (*pb.FavoriteResp, error) {
	l := logic.NewFavoriteLogic(ctx, s.svcCtx)
	return l.Favorite(in)
}

// 取消点赞
func (s *VideoRpcServer) UnFavorite(ctx context.Context, in *pb.UnFavoriteReq) (*pb.UnFavoriteResp, error) {
	l := logic.NewUnFavoriteLogic(ctx, s.svcCtx)
	return l.UnFavorite(in)
}

// 批量获取视频
func (s *VideoRpcServer) GetVideoListByIds(ctx context.Context, in *pb.GetVideoListByIdsReq) (*pb.GetVideoListByIdsResp, error) {
	l := logic.NewGetVideoListByIdsLogic(ctx, s.svcCtx)
	return l.GetVideoListByIds(in)
}

// 获取点赞列表
func (s *VideoRpcServer) FavoriteList(ctx context.Context, in *pb.FavoriteListReq) (*pb.FavoriteListResp, error) {
	l := logic.NewFavoriteListLogic(ctx, s.svcCtx)
	return l.FavoriteList(in)
}

// 发布评论
func (s *VideoRpcServer) PublishComment(ctx context.Context, in *pb.PublishCommentReq) (*pb.PublishCommentResp, error) {
	l := logic.NewPublishCommentLogic(ctx, s.svcCtx)
	return l.PublishComment(in)
}

// 删除评论
func (s *VideoRpcServer) DeleteComment(ctx context.Context, in *pb.DeleteCommentReq) (*pb.DeleteCommentResp, error) {
	l := logic.NewDeleteCommentLogic(ctx, s.svcCtx)
	return l.DeleteComment(in)
}

// 获取视频评论
func (s *VideoRpcServer) GetCommentList(ctx context.Context, in *pb.GetCommentListReq) (*pb.GetCommentListResp, error) {
	l := logic.NewGetCommentListLogic(ctx, s.svcCtx)
	return l.GetCommentList(in)
}
